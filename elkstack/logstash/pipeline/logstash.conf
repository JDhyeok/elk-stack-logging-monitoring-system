input {
    kafka {
        bootstrap_servers => "3.35.115.183:9092"
        topics => ["nginx_log"]
        auto_offset_reset => "earliest"
        decorate_events => true
        codec => json
    }
}
filter {
    grok{
        match => { "log" => "%{IPORHOST:remoteAddr} (?:-|(%{WORD}.%{WORD})) %{USER:ident} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:method} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:status} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{QS:forwarder}" }
        # match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
        # overwrite => [ "message" ]
    }

    mutate {
        convert => ["response", "integer"]
        convert => ["bytes", "integer"]
        convert => ["responsetime", "float"]
    }

    geoip{
        source => "clientip"
        target => "geoip"
        add_tag => [ "nginx-geoip" ]

    }
}
# filter {
#     json{
#         source => "message"
#     }
#     mutate {
#         remove_field => ["message"]
#     }
#     if(![latency] or latency=="") {
#         mutate {
#             add_field => {
#                 latencdy => -1
#             }
#         }
#     }
#     if([@metadata][kafka][topic] == "system_monitorings"){
#         mutate {
#             add_field => {
#                 indexPrefix => "system_monitoring"
#             }
#         }
#     }else {
#         mutate {
#             add_field => {
#                 indexPrefix => "unkown"
#             }
#         }
#     }
# }

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "nginx-logs-%{+YYYY.MM.dd}"
    }
}
